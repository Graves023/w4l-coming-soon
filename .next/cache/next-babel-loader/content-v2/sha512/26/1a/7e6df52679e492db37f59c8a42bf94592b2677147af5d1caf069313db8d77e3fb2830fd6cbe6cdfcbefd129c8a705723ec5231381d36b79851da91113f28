{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport uaMessages from '../locales/ua_UA.json';\nconst uaLang = {\n  messages: _objectSpread({}, uaMessages),\n  locale: 'ua-UA'\n};\nexport default uaLang;","map":{"version":3,"sources":["/Users/davidnejmatov/projects/w4l-coming-soon/src/i18n/entries/ua-UA.js"],"names":["uaMessages","uaLang","messages","locale"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,oBACHF,UADG,CADK;AAIbG,EAAAA,MAAM,EAAE;AAJK,CAAf;AAMA,eAAeF,MAAf","sourcesContent":["import uaMessages from '../locales/ua_UA.json';\n\nconst uaLang = {\n  messages: {\n    ...uaMessages,\n  },\n  locale: 'ua-UA',\n};\nexport default uaLang;\n"]},"metadata":{},"sourceType":"module"}